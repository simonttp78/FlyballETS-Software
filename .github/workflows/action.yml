# This is a basic workflow to help you get started with Actions

name: CI for Tags

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    tags:
      - '**'
    branches:
      - develop

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: macos-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Build WebUI
        working-directory: ./WebUI
        run: |
          npm ci
          npm run build

      - name: Set up python
        uses: actions/setup-python@v4

      - name: Install dependencies
        working-directory: ./
        run: |
          python -m pip install --upgrade pip
          pip install platformio

      - name: Run PlatformIO
        working-directory: ./
        run: platformio run

      #- name: Upload build artifact
      #  uses: actions/upload-artifact@v3
      #  with:
      #    name: FlyballETS-Firmware
      #    path: .pio/build/lolin32/firmware.bin

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          body_path: CHANGELOG.md
          release_name: ${{ github.ref }}
          draft: true
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: .pio/build/lolin32/firmware.bin
          asset_name: FlyballETS-Firmware-${{ github.ref }}.bin
          asset_content_type: application/octet-stream
